/* Reset básico */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  z-index: 2;
}

h1, h2, h3 {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  font-weight: bold;
  z-index: 2;
}

body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  background: #fdfdfd;
  color: #333;
  line-height: 1.6;
  z-index: 2;
}

/* Header con Flexbox para el logo, título y navegación */
header {
  background: #ff3c38;
  color: #fff;
  padding: 1.5rem 1rem;
  display: flex;
  flex-direction: column; /* Apilamos los elementos verticalmente */
  align-items: center; /* Centra los elementos horizontalmente */
  justify-content: center; /* Centra los elementos verticalmente */
  gap: 10px; /* Espacio entre los elementos del header */
  z-index: 2;
}

header h1 {
  font-size: 2.5rem;
  margin-bottom: 0;
}

.logo-flotante {
    width: 60px;
    height: auto;
    margin-bottom: 0;
}

/* Navegación */
nav {
  width: 100%; /* Asegura que el nav ocupe todo el ancho para que el ul pueda centrarse */
  background-color: #333; /* Color de fondo para la barra de navegación */
  box-shadow: 0 2px 5px rgba(0,0,0,0.2); /* Sombra para destacarla */
  padding: 0.5rem 0; /* Un poco de padding vertical */
}

nav ul {
  display: flex;
  justify-content: center; /* Centra los elementos de la lista */
  flex-wrap: wrap; /* Permite que los elementos se envuelvan en líneas nuevas si no hay espacio */
  list-style: none;
  margin: 0; /* Resetea cualquier margen de ul por defecto */
  padding: 0; /* Resetea cualquier padding de ul por defecto */
}

nav ul li {
  margin: 0.5rem 1rem; /* Espacio entre los elementos de la lista */
}

nav ul li a {
  text-decoration: none;
  color: #fff;
  font-weight: bold;
  padding: 0.5rem 1rem;
  background-color: #ff6b6b;
  border-radius: 5px;
  transition: background 0.3s;
}

nav ul li a:hover {
  background-color: #ff9a9a;
}

/* sticky-nav - Eliminada funcionalidad sticky, es solo una clase de estilo */


main {
 flex-grow: 1; /* Permite que main ocupe el espacio restante */
  padding: 2rem;
  max-width: 960px; /* Mantén el ancho máximo de tu contenido */
  margin: 0 auto; /* Centra el main */
  /* Fondo semi-transparente para el main para que el video se vea por debajo */
  background: rgba(255, 255, 255, 0.8); /* Fondo blanco semitransparente */
  border-radius: 10px;
  box-shadow: 0 0 8px rgba(0,0,0,0.05);
  margin-top: 2rem; /* Espacio para separar del header */
  margin-bottom: 2rem; /* Espacio para separar del footer */
}

section {
  margin-bottom: 2rem;
  background: #f9f9f9;
  padding: 1.5rem;
  border-radius: 10px;
  box-shadow: 0 0 8px rgba(0,0,0,0.05);
}

h2, h3 {
  color: #ff3c38;
  margin-bottom: 1rem;
}

ul, ol {
  margin-left: 2rem;
  margin-bottom: 1rem;
}

table {
  width: 100%;
  border-collapse: collapse;
  margin-top: 1rem;
}

table caption {
  font-weight: bold;
  margin-bottom: 0.5rem;
}

table th, table td {
  padding: 0.75rem;
  border: 1px solid #ccc;
  text-align: left;
}

table th {
  background: #ffe5e5;
}

/* iframe - estilo general, sobreescrito por clases específicas si aplica */
iframe {
  max-width: 100%;
  border: none;
  box-shadow: 0 0 10px rgba(0,0,0,0.1);
}

/* audio - gestionado por flexbox en audio-players-container */
audio {
  min-height: 50px; /* Una altura común para los reproductores de audio del navegador */
  width: 100%; /* Asegura que el reproductor ocupe el espacio disponible */
}

form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  background: #fff2f2; /* Light red/pink background for the form itself */
  padding: 1.5rem;
  border-radius: 8px;
  box-shadow: inset 0 1px 3px rgba(0,0,0,0.1); /* Inner shadow for depth */
}

label {
  font-weight: bold;
  color: #555;
  margin-bottom: 0.25rem;
}

input[type="text"],
input[type="email"],
textarea {
  padding: 0.75rem;
  border: 1px solid #ccc;
  border-radius: 5px;
  font-size: 1rem;
  width: 100%;
  box-sizing: border-box; /* Crucial for consistent width with padding */
  margin-top: 0.25rem; /* Small space between label and input */
}

textarea {
  resize: vertical; /* Allow vertical resizing of textarea */
  min-height: 100px; /* Minimum height for textarea */
}

input[type="submit"] {
  background: #ff3c38; /* Red submit button */
  color: white;
  border: none;
  padding: 0.75rem;
  font-size: 1rem;
  border-radius: 5px;
  cursor: pointer;
  transition: background 0.3s ease; /* Smooth transition for hover effect */
  align-self: flex-end; /* Align button to the right */
  width: auto; /* Allow button to size according to content */
  min-width: 120px; /* Give it a minimum width */
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); /* Shadow for button */
}

input[type="submit"]:hover {
  background: #ff6b6b; /* Lighter red on hover */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Enhanced shadow on hover */
}

.localStorage-display {
  background-color: #e6f7ff; /* Light blue background */
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  flex: 1; /* Allow the display section to take up remaining space */
  min-width: 250px; /* Ensure display doesn't get too small */
  max-width: 400px; /* Limit its max width */
  box-sizing: border-box;
}

.localStorage-display h3 {
  color: #0056b3; /* Darker blue for heading */
  margin-top: 0;
  margin-bottom: 15px;
  text-align: center;
}

.localStorage-display ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

.localStorage-display ul li {
  background-color: #f0f8ff; /* Even lighter blue for list items */
  padding: 10px;
  margin-bottom: 8px;
  border-radius: 5px;
  border: 1px solid #cceeff;
  font-size: 0.95rem;
  line-height: 1.4;
}

.localStorage-display ul li strong {
  color: #333;
}

.localStorage-display p {
  text-align: center;
  color: #666;
  font-style: italic;
}

.clear-localStorage-btn {
  background: #dc3545; /* Red for clear button */
  color: white;
  border: none;
  padding: 0.75rem 1rem;
  font-size: 0.9rem;
  border-radius: 5px;
  cursor: pointer;
  transition: background 0.3s ease;
  margin-top: 20px;
  display: block; /* Make it a block element to center or manage width */
  width: fit-content; /* Adjust width to content */
  margin-left: auto;
  margin-right: auto; /* Center the button */
}

.clear-localStorage-btn:hover {
  background: #c82333; /* Darker red on hover */
}


footer {
  background: #222;
  color: #eee;
  text-align: center;
  padding: 1rem;
  margin-top: 2rem;
}
footer a {
  color: #ff9a9a;
  text-decoration: none;
}

.boton-comprar-fijo {
    background-color: #ff3c38;
    color: white;
    padding: 15px 25px;
    border-radius: 50px;
    text-decoration: none;
    font-weight: bold;
    box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    transition: background 0.3s ease;
    display: inline-block;
    margin-top: 20px;
}

.boton-comprar-fijo:hover {
    background-color: #ff6b6b;
    transform: translateY(-2px);
}

/* Artistas Grid */
/* style.css */

/* ... (previous CSS rules) ... */

/* Artistas Grid */
.artistas-grid {
    display: grid;
    /* On larger screens, create two columns. On smaller screens, revert to one. */
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* Responsive columns */
    gap: 2rem; /* Consistent spacing between grid items */
    padding: 1rem; /* Add some padding around the grid itself */
}

.artistas-grid-article { /* Target the specific class name */
    background-color: #f9fafb; /* Light background for each artist card */
    padding: 1.5rem;
    border-radius: 0.75rem; /* Slightly more rounded corners */
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05); /* Enhanced shadow for depth */
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out; /* Smooth hover effects */
}

.artistas-grid-article:hover {
    transform: translateY(-5px); /* Lift card on hover */
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.2), 0 10px 10px -5px rgba(0, 0, 0, 0.08); /* More pronounced shadow on hover */
}

.artistas-grid-article h3 { /* Target h3 within the article */
    color: #ff3c38; /* Consistent accent color for artist names */
    margin-bottom: 1rem;
    font-size: 1.75rem; /* Slightly larger font for names */
}

.artistas-grid-img { /* Target the specific class name */
    width: 150px; /* Fixed size for circular images */
    height: 150px;
    object-fit: cover;
    border-radius: 50%; /* Perfect circles for images */
    margin-bottom: 1.5rem; /* More space below image */
    border: 5px solid #ff9a9a; /* Thicker, softer border */
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Subtle shadow for images */
}

.artistas-grid-article p { /* Target p within the article */
    color: #555; /* Softer text color for descriptions */
    line-height: 1.7; /* Improved readability for paragraphs */
    margin-bottom: 0; /* Remove bottom margin if it's the last element */
    flex-grow: 1; /* Allows paragraphs to take up available space, pushing content down */
}


/* ... (rest of the CSS) ... */

/* Media Queries */
@media (max-width: 768px) {
    .artistas-grid {
        grid-template-columns: 1fr; /* Stack items on smaller screens */
    }
}

/* Media Social Flexbox - para iframes */
.media-social-container {
    display: flex 100%;
    flex-wrap: wrap;
    justify-content: center; /* Centra los elementos */
    gap: 20px; /* Espacio entre los iframes */
    margin-top: 1rem;
}

.media-social-container iframe {
    text-align: center;
    justify-content: center;
    flex-grow: 1; /* Permite que los iframes crezcan para llenar el espacio disponible */
    flex-shrink: 1; /* Permite que los iframes se encojan si es necesario */
    flex-basis: 0; /* Punto de partida para el cálculo de tamaño, combinado con flex-grow 1 los hace repartir el espacio equitativamente *//* Ancho mínimo para que no se hagan ilegibles en pantallas pequeñas */
    height: 100%; /* Altura fija para mantener consistencia, puedes ajustarla */
    width: 100%; /* Asegura que el iframe use todo el ancho de su flex-basis */
}

/* Cronograma y Entradas: Tablas */
.tabla-responsive-container {
    display: block;
    width: 100%;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    margin-bottom: 2rem;
}

/* Cronograma: Lista con Flexbox */
.cronograma-lista-container {
    display: flex;
    flex-direction: column;
    gap: 10px;
    margin-bottom: 2rem;
    padding-left: 20px;
}

/* Contenedor para audio players */
.audio-players-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 20px;
    margin-top: 1rem;
}

.audio-players-container audio {
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: 280px;
    max-width: 100%;
    min-height: 50px; /* Asegura la visibilidad del reproductor */
}

/* Media Queries (Combinadas y corregidas) */
@media (max-width: 480px) {
    .media-social-container iframe {
        height: 250px; /* Ajusta la altura en pantallas muy pequeñas */
        flex-basis: 100%; /* En pantallas muy pequeñas, cada iframe ocupa el 100% del ancho */
        min-width: unset; /* Permite que el iframe se encoja por debajo de 280px si flex-basis 100% lo requiere */
    }
}

/* Estilos para la sección de video (si aplica) */
/* ... (resto del CSS) ... */

.video {
  position: relative;
  /* Ajusta estos valores si 50rem es demasiado grande para tu diseño */
  /* Podrías usar un valor más razonable como 400px, 600px, o 30vw para responsive */
  min-height: 600px; /* Un tamaño más manejable, ajusta según necesidad */
  max-height: 700px; /* Puedes mantenerlo si quieres un límite superior */
  height: auto; /* Permite que la altura se ajuste automáticamente con el ancho */
  overflow: hidden;
  width: 100%; /* Asegura que el contenedor de video ocupe todo el ancho disponible */
}

.video video {
  /* Estas propiedades son CLAVE para que el video llene el espacio y se vea bien */
  width: 100%;
  height: 100%;
  object-fit: cover; /* Recorta el video para llenar el contenedor manteniendo la proporción */
  position: absolute; /* Permite que el video se posicione y cubra el área del contenedor padre */
  top: 0;
  left: 0;
  z-index: 1; /* Asegura que el video esté por debajo del overlay */
}

.video .overlay {
  position: absolute;
  background: linear-gradient(270deg, rgba(117, 47, 151, 0.6), rgba(57, 23, 73, 0.9));
  inset: 0; /* Cubre todo el contenedor .video */
  display: flex;
  align-items: center;
  justify-content: center; /* Centra el contenido del overlay */
  z-index: 2; /* Asegura que el overlay esté por encima del video */
  color: white; /* Para asegurar que el texto sea visible */
  text-align: center;
}

.contenido-video {
  z-index: 3; /* El contenido (texto) debe estar por encima del overlay */
  /* Asegúrate de que este contenedor de texto no tenga un background propio que lo opaque */
  position: relative; /* Para que z-index funcione en algunos contextos */
}

.contenido-video h2 {
  color: #FFFFFF;
  font-size: 3rem; /* Ajusta el tamaño de fuente si 7rem es demasiado grande */
  margin: 0;
}
.contenido-video p {
  background-color: #F53756;
  display: inline-block;
  padding: 1rem 2rem;
  color: #FFFFFF;
  font-size: 1.5rem; /* Ajusta el tamaño de fuente */
  font-weight: 700;
  margin: 0;
}

/* Contenedor del video de fondo */
.background-video-container {
  position: fixed; /* Hace que el video se quede en su lugar al hacer scroll */
  top: 0;
  left: 0;
  width: 100vw; /* Cubre todo el ancho del viewport */
  height: 100vh; /* Cubre todo el alto del viewport */
  overflow: hidden; /* Oculta cualquier parte del video que se desborde */
  z-index: -2; /* Envía el video al fondo, detrás de todo lo demás */
}
.background-video-container video {
  width: 100%;
  height: 100%;
  object-fit: cover; /* Asegura que el video cubra el contenedor manteniendo su proporción */
  z-index: -2;
}

.background-video-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.3); /* Overlay semitransparente (ajústalo para la visibilidad deseada) */
  z-index: -2; /* Encima del video, pero debajo del contenido */
}
.site-content-wrapper {
  position: relative; /* CLAVE: Crea un nuevo contexto de apilamiento para su z-index */
  z-index: 1; /* Asegura que todo el contenido esté encima del video y el overlay */
  min-height: 100vh; /* Asegura que el contenedor de contenido sea al menos tan alto como la ventana */
  display: flex;
  flex-direction: column; /* Para que el footer se quede abajo si el contenido es corto */
}
